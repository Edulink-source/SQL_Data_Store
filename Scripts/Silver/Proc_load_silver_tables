
/*
=========================================================================================
Stored Procedure:load Silver layer (Broze -> Silver)
=========================================================================================
Script Purpose:
	This stored procedure performs the ETL (Etract, Transform, Load) process to populate 
	the 'Silver' shema tables from the 'Broze' shema.
Actions performe:
	- Truncates Silver tables.
	- Inserts transformed and cleaned data from Broze into Silver tables.

Parameters:
	None.
	This stored procedure does not accept any parameters or return any values.

Usage Example:
	EXEC silver.load_silver;
===========================================================================================
*/

CREATE OR ALTER PROCEDURE silver.load_silver AS 
BEGIN

	TRUNCATE TABLE silver.crm_cus_info;
	PRINT '>> Inserting Data Into: silver.crm_cus_info';

	INSERT INTO silver.crm_cus_info(
		cst_id,
		cst_key,
		cst_firstname,
		cst_last,
		cst_marital_status,
		cst_gndr,
		cst_create_date)

	SELECT 
		cst_id,
		cst_key,
		TRIM(cst_firstname) AS cst_firstname,
		TRIM(cst_last) AS cst_last,
		CASE 
			WHEN TRIM(cst_marital_status) = 'M' THEN 'Married'
			WHEN TRIM(cst_marital_status) = 'S' THEN 'Single'
		END AS cst_marital_status,
		CASE 
			WHEN UPPER(TRIM(cst_gndr)) = 'M' THEN 'Male'
			WHEN UPPER(TRIM(cst_gndr)) = 'F' THEN 'Female'
		END AS cst_gndr,
		cst_create_date
	FROM(
		SELECT *,
		ROW_NUMBER() OVER(PARTITION BY cst_id ORDER BY cst_create_date DESC) AS flag_number
		FROM bronze.crm_cus_info
		WHERE cst_id IS NOT NULL)t
		WHERE flag_number = 1;


	TRUNCATE TABLE silver.crm_prd_info;
	PRINT '>> Inserting Data Into: silver.crm_prd_info';


	INSERT INTO silver.crm_prd_info(
		prd_id,
		prd_key,
		cat_key,
		prd_key_new,
		prd_nm,
		prd_cost,
		prd_line,
		prd_start_date,
		prd_end_dt)

	SELECT
		prd_id,
		prd_key,
		REPLACE(SUBSTRING(prd_key, 1, 5), '-', '_') AS cat_key,
		SUBSTRING(prd_key,7, LEN(prd_key)) AS prd_key_new,
		prd_nm,
		prd_cost,
		CASE UPPER(TRIM(prd_line))
			WHEN 'S' THEN 'Other Sales'
			WHEN 'M' THEN 'Mountain'
			WHEN 'R' THEN 'Road'
			WHEN 'T' THEN 'Touring'
			WHEN 45871 THEN 'Mountain'
		END AS prd_line,
		CAST (prd_start_date AS DATE) AS prd_start_date,
		CAST(LEAD(prd_start_date) OVER(PARTITION BY prd_key ORDER BY prd_start_date)-1 AS DATE) AS prd_end_date
	FROM bronze.crm_prd_info;


	TRUNCATE TABLE silver.crm_sales_details;
	PRINT '>> Inserting Data Into: silver.crm_sales_details';

	INSERT INTO silver.crm_sales_details(
		sls_ord_num,
		sls_prd_key,
		sls_cus_id,
		sls_order_dt,
		sls_ship_dt,
		sls_due_dt,
		sls_sales,
		sls_quantity,
		sls_price
		)

	SELECT 
		sls_ord_num,
		sls_prd_key,
		sls_cus_id,
		CASE WHEN sls_order_dt <= 0 OR LEN(sls_order_dt) <> 8 THEN NULL
			 ELSE CAST(CAST(sls_order_dt AS VARCHAR) AS DATE)
		END AS sls_order_dt,
		CASE WHEN sls_ship_dt <= 0 OR LEN(sls_ship_dt) <> 8 THEN NULL
			 ELSE CAST(CAST(sls_ship_dt AS VARCHAR) AS DATE)
		END AS sls_ship_dt,
		CASE WHEN sls_due_dt <= 0 OR LEN(sls_due_dt) <> 8 THEN NULL
			 ELSE CAST(CAST(sls_due_dt AS VARCHAR) AS DATE)
		END AS sls_due_dt,
		CASE WHEN sls_sales IS NULL OR sls_sales <= 0 OR sls_sales <> sls_quantity * ABS(sls_price) THEN sls_quantity * ABS(sls_price)
			 ELSE sls_sales
		END sls_sales,
		NULLIF(sls_quantity,0) AS sls_quantity,
		CASE WHEN sls_price <= 0 OR sls_price IS NULL THEN sls_sales/NULLIF(sls_quantity,0)
			 ELSE sls_price
		END AS sls_price
	FROM bronze.crm_sales_details
	;

	TRUNCATE TABLE silver.erp_CUST_AZ12;
	PRINT '>> Inserting Data Into: silver.erp_CUST_AZ12';

	INSERT INTO silver.erp_CUST_AZ12(
		CID,
		BDATE,
		GEN
	)

	SELECT
		CASE 
			WHEN CID LIKE 'NAS%' THEN SUBSTRING(CID, 4, LEN(CID)) 
			ELSE CID 
		END AS cid,
		CAST(CASE WHEN BDATE > GETDATE() THEN NULL 
		ELSE BDATE
		END AS DATE) AS birthdate,
		CASE WHEN UPPER(TRIM(GEN)) IN ('F','FEMALE') THEN 'Female'
			 WHEN UPPER(TRIM(GEN)) IN ('M','MALE') THEN 'Male'
			 ELSE 'n/a'
		END AS gender
	FROM bronze.erp_CUST_AZ12
	;

	TRUNCATE TABLE silver.erp_LOC_A101;
	PRINT '>> Inserting Data Into: silver.erp_LOC_A101';

	INSERT INTO silver.erp_LOC_A101(
		CID,
		CNTRY
	)

	SELECT
		REPLACE(CID,'-','') AS cid,
		CASE WHEN TRIM(CNTRY) = 'DE' THEN 'Germany'
			 WHEN TRIM(CNTRY) IN ('US','USA') THEN 'United States'
			 WHEN TRIM(CNTRY) IS NULL OR TRIM(CNTRY) ='' THEN 'n/a'
			 ELSE CNTRY
		END AS country 
	FROM bronze.erp_LOC_A101;

	TRUNCATE TABLE silver.erp_PX_CAT_G1V2;
	PRINT '>> Inserting Data Into: silver.erp_PX_CAT_G1V2';

	INSERT INTO silver.erp_PX_CAT_G1V2(
			ID,
			CAT,
			SUBCAT,
			MAINTENACE)

	SELECT 
		ID,
		CAT,
		SUBCAT,
		MAINTENACE
	FROM bronze.erp_PX_CAT_G1V2
END
;




EXEC silver.load_silver;
