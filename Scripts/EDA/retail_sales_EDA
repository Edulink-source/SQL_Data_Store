
/*
EXPLORATORY DATA ANALYSIS (EDA)
	This SQL scripts analyzes retail data to summarize sales,
	customers, products and revenue performance.
*/


-- Find the Total Sales
-- Find how many items are sold 
-- Find the average selling price 
-- Find the Total Number of Orders 
-- Find the Total Number of Products
-- Find the Total Number of Customers 
-- Find the Total Number of Customers that has placed an order

SELECT 
'Total Sales' AS measure_name, SUM(sales_amount) AS measure_value
FROM gold.fact_sale
UNION ALL
SELECT 
'Total Quantity' AS measure_name, SUM(quantity) AS measure_value
FROM gold.fact_sale
UNION ALL 
SELECT 
'Average Price' AS measure_name, AVG(sales_amount) AS measure_value
FROM gold.fact_sale
UNION ALL
SELECT 
'Total Nr. Orders' AS measure_name, COUNT(DISTINCT(order_number)) AS measure_value
FROM gold.fact_sale
UNION ALL
SELECT 
'Total Nr. Products' AS measure_name, COUNT(DISTINCT(product_name)) AS measure_value
FROM gold.dim_products
UNION ALL 
SELECT 
'Total Nr. Customers' AS measure_name, COUNT(DISTINCT(customer_number)) AS measure_value
FROM gold.dim_customers;


-- Find total customers by country

SELECT 
	country,
	COUNT(customer_number) AS total_customers
FROM gold.dim_customers
GROUP BY country
ORDER BY total_customers DESC;

-- Find total customers by gender

SELECT 
	gender,
	COUNT(gender) AS total_customers
FROM gold.dim_customers
GROUP BY gender
ORDER BY total_customers DESC;

-- Find total products by category

SELECT
	category,
	COUNT(product_key) AS total_products
FROM gold.dim_products
GROUP BY category
ORDER BY total_products DESC;


-- What is the average costs in each category?

SELECT 
	category,
	AVG(cost) AS average_cost
FROM gold.dim_products
GROUP BY category
ORDER BY average_cost DESC;


-- What is the total revenue generated for each category?

SELECT
	pr.category,
	SUM(fa.sales_amount) AS total_revenue
FROM gold.fact_sale AS fa
LEFT JOIN gold.dim_products AS pr
ON fa.product_key = pr.product_id
WHERE pr.category IS NOT NULL
GROUP BY pr.category
ORDER BY total_revenue DESC;


-- Find total revenue generated by each customer

SELECT
	cu.first_name,
	cu.last_name,
	cu.customer_id,
	SUM(fa.sales_amount) AS total_revenue
FROM gold.fact_sale AS fa
LEFT JOIN gold.dim_customers AS cu
ON fa.product_key = cu.customer_number
GROUP BY cu.first_name,
		 cu.last_name,
		 cu.customer_id
		 ORDER BY total_revenue DESC;

-- What is the distribution of sold items across countries?

SELECT
	cu.country,
	SUM(fa.quantity) AS total_items_sold
FROM gold.fact_sale AS fa
LEFT JOIN gold.dim_customers AS cu
ON fa.product_key = cu.customer_number
GROUP BY cu.country
ORDER BY total_items_sold DESC;


-- Which 5 products generate the highest revenue?


SELECT TOP 5
	pr.product_name,
	SUM(fa.sales_amount) AS total_revenue
FROM gold.fact_sale AS fa
LEFT JOIN gold.dim_products AS pr
ON fa.product_key = pr.product_key
GROUP BY pr.product_name
ORDER BY total_revenue DESC;

-- Which 5 products generate the highest revenue using Window function?

SELECT *
	FROM(
	SELECT
	pr.product_name,
	SUM(fa.sales_amount) AS total_revenue,
	RANK() OVER(ORDER BY SUM(fa.sales_amount) DESC) rank_products 
FROM gold.fact_sale AS fa
LEFT JOIN gold.dim_products AS pr
ON fa.product_key = pr.product_key
GROUP BY pr.product_name)T
WHERE rank_products <= 5;


-- What are the 5 worst performing products in terms of sales?


SELECT TOP 5
	pr.product_name,
	SUM(fa.sales_amount) AS total_revenue
FROM gold.fact_sale AS fa
LEFT JOIN gold.dim_products AS pr
ON fa.product_key = pr.product_key
GROUP BY pr.product_name
ORDER BY total_revenue ASC;


